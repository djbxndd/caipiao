'''
=============================================================================================================================================
# 程序名称：双色球红球预测小程序
# 程序版本：开发版 V0.04
# 作    者：dengjibing
# 更新日期：2020/7/18 17：45
# 更新内容：（实现批量数据更新功能）
#           ①更新中奖数据的数据结构，列表list_cur[]改用CSV文件来存储最近若干期的中奖号码；
#           ②处理方式由V0.03的单步方式改成了批处理方式，使用函数调用的方式来更新历史中奖数据；
=============================================================================================================================================
# 数据结构说明：
0.文件redhistory.csv：存放初回中奖的数据（期号，红1遗漏值，红2遗漏值，0（代表：中奖号码）,......,红33遗漏值)
1.二维数组a:存放初始时第一回的红球中奖数据（1行，34列，第1列代表中奖期号；从第2个元素到第34个元素，如果值为0，代表当期中奖数据，否则代表遗漏值；
--------------------------------------------------------------------------------------------------------------------------------------------
#数据结构的变更点：
①current_data.csv：存储最近若干期的中奖号码；用来批量更新历史中奖数据；
②列表list_cur[]：存放当前行的中奖数据，【期号，红1，红2，红3，红4，红5，红6】
③一维数组b：存放当前行中奖号码所对应的分布图
④一维数组c：存放当前行中奖号码与上期中奖数据进行运算的结果；
⑤二维数组d：存放最新的所有中奖数据，即在二维数组a的末尾追加一维数组c,d=np.vstack([a,c])
⑥文件filename:存放处理后的最终结果，以CSV格式存放全部的中奖数据，作为后续数据处理的基础；
--------------------------------------------------------------------------------------------------------------------------------------------
7.工作目录为：e:\\caipiao，程序开始即设为当前目录；使用相对路径进行文件读写操作；
=============================================================================================================================================
# 算法说明：

子程序1：更新开奖数据的算法（更新）：
①从文件中读入红球历史开奖数据到二维数组a；
--------------------------------------------------------------------------------------------------------------------------------------------
算法的变更点：
①将原来流程的第②~⑤改写成函数，每调用一次，读取近期开奖数据的一行，同时生成一个文件；
--------------------------------------------------------------------------------------------------------------------------------------------
②输入当期开奖的6个红球存入列表，同时生成当期开奖的一维数组b；
③数组b与数组a最后一行的所有元素，逐位元素进行比较、运算，生成中间数组C；
  如果数组b当前位置元素的值为0，元素值保持0不变；将其写入中间数组C的对应位置；
  如果数组b当前位置元素的值为1,则对数组a最后一行的当前元素值加1，将其写入中间数组C的对应位置；
④将数组c追加到数组a的最后一行，形成新数组d; 
⑤将更新后的数组d写入新的csv文件,文件命名规则：redhistory_当期期号.csv
--------------------------------------------------------------------------------------------------------------------------------------------
=============================================================================================================================================
子程序2：统计程序的算法设计（开发中)
# 统计各期开奖数据的遗漏值之和，
=============================================================================================================================================
# 双色球行业术语；
1.红球（1-33），蓝球（1-16），中奖号码：6+1；
2.很冷码：10期以内未开过一次，即遗漏值>10
3.冷  码：5-10期内（>5期且<10期）只开过一次，即遗漏值大于5或者小于等于10；
4.温  码：1-5期内（>1期且<5期）只开过一次，即遗漏值大于0或者小于等于4；
5.热  码：1-5期内（>1期且<5期）开过两次或两次以上，即遗漏值大于0或者小于等于4；
6.遗漏值和：当期开奖号码的所有遗漏值之和（取上期对应号码的遗漏值之和）

=============================================================================================================================================
'''

import numpy as np
import os as os

def init():
    os.chdir("e:\\caipiao\\")
    filename="redhistory.csv"
    return filename

def load_history(filename):
    f1=filename
    print("1.导入历史中奖红球数据到【二维数组a（1行34列）】")
    a=np.loadtxt(f1,dtype=np.int,delimiter=",")    
    b=np.resize(a,(1,34))
    print("历史中奖数据是：\n",b)
    return b

def setup_current_dt_path():
    current_file="current_data.csv"
    return current_file

def load_current_data(cur_f1):
    f2=cur_f1
    print("2.读入当期中奖红球数据到数组b【（一维数组，34列）】")
    c=np.loadtxt(f2,dtype=np.int,delimiter=",")    
    d=np.resize(c,(1,7))
    print("d is :",d)
    return d
   

def main():
    print("准备开始。。。")
    history = load_history(init())    #代涛指导，将函数值 返回给变量，即可以将数组的值 带到主程序；
    current=load_current_data(setup_current_dt_path)
##    print(current)
##    print(setup_current_dt_path())

main()




##print(a.ndim,a.shape,a.size)  调试语句


##print("2.读入当期中奖红球数据到数组b【（一维数组，34列）】")
##list_cur=[2020061,8,17,24,26,27,31]
##b=np.ones((34),dtype=np.int)
##print("转换前b的值是：\n",b)
##
##b[0]=list_cur[0]
##for i in range(1,7):  ##从第二个元素开始转换，因为第一个元素是期号；
##    temp=list_cur[i]
##    b[temp]=0
##    
##print("转换后b的值是：\n",b)
##
##c=b  ##直接赋值的方法拷贝；
##print("3.创建临时数组c")
##print("复制后的数组C的值是：\n",c)
##for i in range(1,34):
##    if(b[i]==1):
##        c[i]=a[i]+b[i]
##     
##print("更新后的数组C的值是：\n",c)
##
##print("4.更新当期中奖红球数据到数组d")
##
##d=np.vstack([a,c])   ##在二维数组a的尾部追加一行（一维数组）
##print("更新后的数组d的值是：\n",d)
##
##f1="redhistory_"
##f2=str(d[d.shape[0]-1,0])
##filename=f1+f2+".csv"
##
##np.savetxt(filename,d,fmt='%d',delimiter=",")  ##第一种写入文件的方法；


